---
# MailHog Kubernetes Deployment Manifest
# Based on MailHog Docker deployment documentation
# https://github.com/mailhog/MailHog/blob/master/docs/DEPLOY.md#docker

apiVersion: v1
kind: Namespace
metadata:
  name: email-testing
  labels:
    name: email-testing
    purpose: email-testing-and-development

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailhog
  namespace: email-testing
  labels:
    app: mailhog
    component: email-testing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailhog
  template:
    metadata:
      labels:
        app: mailhog
        component: email-testing
    spec:
      containers:
        - name: mailhog
          image: mailhog/mailhog:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1025
              name: smtp
              protocol: TCP
            - containerPort: 8025
              name: http
              protocol: TCP
          env:
            # MailHog configuration environment variables
            - name: MH_STORAGE
              value: "maildir"
            - name: MH_MAILDIR_PATH
              value: "/tmp/maildir"
            - name: MH_SMTP_BIND_ADDR
              value: "0.0.0.0:1025"
            - name: MH_UI_BIND_ADDR
              value: "0.0.0.0:8025"
            - name: MH_API_BIND_ADDR
              value: "0.0.0.0:8025"
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /
              port: 8025
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8025
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: maildir-storage
              mountPath: /tmp/maildir
      volumes:
        - name: maildir-storage
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: mailhog
  namespace: email-testing
  labels:
    app: mailhog
    component: email-testing
spec:
  selector:
    app: mailhog
  ports:
    - name: smtp
      protocol: TCP
      port: 1025
      targetPort: 1025
    - name: http
      protocol: TCP
      port: 8025
      targetPort: 8025
  type: ClusterIP

---
# Ingress for external access to MailHog web interface
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mailhog-ingress
  namespace: email-testing
  labels:
    app: mailhog
    component: email-testing
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - host: mailhog.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mailhog
                port:
                  number: 8025

---
# ConfigMap for MailHog configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: mailhog-config
  namespace: email-testing
  labels:
    app: mailhog
    component: email-testing
data:
  # MailHog configuration file
  mailhog.conf: |
    # MailHog Configuration
    # SMTP server configuration
    smtp_bind_addr: "0.0.0.0:1025"
    
    # Web UI configuration
    ui_bind_addr: "0.0.0.0:8025"
    
    # API configuration
    api_bind_addr: "0.0.0.0:8025"
    
    # Storage configuration
    storage: "maildir"
    maildir_path: "/tmp/maildir"
    
    # Authentication (optional)
    # auth_file: "/etc/mailhog/auth"
    
    # CORS configuration
    cors_origin: "*"
    
    # JWT configuration (optional)
    # jwt_secret: "your-secret-key"

---
# ServiceAccount for MailHog (optional, for RBAC if needed)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mailhog
  namespace: email-testing
  labels:
    app: mailhog
    component: email-testing

---
# NetworkPolicy for MailHog (optional, for security)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mailhog-network-policy
  namespace: email-testing
  labels:
    app: mailhog
    component: email-testing
spec:
  podSelector:
    matchLabels:
      app: mailhog
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: email-testing
        - podSelector:
            matchLabels:
              app: email-service
      ports:
        - protocol: TCP
          port: 1025
        - protocol: TCP
          port: 8025
  egress:
    - {} # Allow all egress traffic
